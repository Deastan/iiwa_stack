<?xml version="1.0"?>
<launch>
    <!-- The planning and execution components of MoveIt! configured to run -->
    <!-- using the ROS-Industrial interface. -->
    
    <!-- | 		PARAMETERS  		| -->
    <!-- the "sim" argument controls whether we connect to a Simulated or Real robot. -->
    <arg name="sim" default="true" doc="If true, the robot will be simulated in Gazebo" />
    <!-- hardware_interface to use : PositionJointInterface, EffortJointInterface, VelocityJointInterface. -->
    <arg name="hardware_interface" default="PositionJointInterface"/>
    <!-- The is gonna have its nodes/topics under a namespace with the same name. -->
    <arg name="robot_name" default="iiwa"/>
    <!-- Model of the iiwa to use : iiwa7, iiwa14 -->
    <arg name="model" default="iiwa7"/>
    <arg name="rviz" default="true" />
    <arg name="namespace" default="/iiwa" />
    
    <remap from="/$(arg hardware_interface)_trajectory_controller/follow_joint_trajectory" 
           to="/$(arg robot_name)/$(arg hardware_interface)_trajectory_controller/follow_joint_trajectory" />
    <remap from="robot_description" to="/$(arg robot_name)/robot_description" /> 
    <remap from="/get_planning_scene" to="/$(arg robot_name)/get_planning_scene" /> 
    
    
    <!-- Load move_group -->
    <group ns="$(arg namespace)">
        <include file="$(find iiwa_debug_moveit)/launch/move_group.launch">
            <arg name="publish_monitored_planning_scene" value="true" />
            <arg name="hardware_interface" value="$(arg hardware_interface)"/>
            <arg name="robot_name" value="$(arg robot_name)"/>
            <arg name="model" value="$(arg model)" />
        </include>
        
        <include if="$(arg rviz)" file="$(find iiwa_debug_moveit)/launch/moveit_rviz.launch">
            <arg name="config" value="true"/>
        </include>

        <!-- We do not have a robot connected, so publish fake joint states -->
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" output="screen">
            <param name="use_gui" value="false"/> 
            <!-- <rosparam param="source_list">["/move_group/fake_controller_joint_states"]</rosparam> -->
        </node>
        
        <!-- Given the published joint states, publish tf for the robot links -->
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen" />
    </group>
    
</launch>
