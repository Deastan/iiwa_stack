<?xml version="1.0" encoding="UTF-8"?>

<launch>

    <!-- <include file="$(find legged_robots_sims)/launch/spawn_monoped.launch"/>
    <include file="$(find legged_robots_sims)/launch/monoped_control.launch"/> -->

    <!-- Params -->
    <!-- These are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="false"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="hardware_interface" default="PositionJointInterface"/>
    <arg name="robot_name" default="iiwa" />
    <arg name="model" default="iiwa7"/>
    <arg name="trajectory" default="true"/>
    <arg name="namespace" default="/"/>
    <arg name="namespace_iiwa" default="/iiwa"/>
    <arg name="rviz" default="false"/>

    <arg name="bool_object" default="true"/>

    
       <!-- Spawn controllers - it uses a JointTrajectoryController -->
    <!-- ns="$(arg namespace)" -->
    <group  if="$(arg trajectory)">
        <!-- <rosparam file="$(find iiwa_gazebo)/config/iiwa_control.yaml" command="load" /> -->
        <include file="$(find iiwa_control)/launch/iiwa_control.launch">
            <arg name="hardware_interface" value="$(arg hardware_interface)" />
            <arg name="controllers" value="joint_state_controller $(arg hardware_interface)_trajectory_controller" />
            <arg name="robot_name" value="$(arg robot_name)" />
            <arg name="model" value="$(arg model)" />
        </include>
    </group>

    <!-- Spawn controllers - it uses an Effort Controller for each joint -->
    <!-- ns="$(arg namespace)" -->
    <group  unless="$(arg trajectory)">
        <include file="$(find iiwa_control)/launch/iiwa_control.launch">
            <arg name="hardware_interface" value="$(arg hardware_interface)" />
            <arg name="controllers" value="
                $(arg hardware_interface)_J1_controller
                $(arg hardware_interface)_J2_controller
                $(arg hardware_interface)_J3_controller
                $(arg hardware_interface)_J4_controller
                $(arg hardware_interface)_J5_controller
                $(arg hardware_interface)_J6_controller
                $(arg hardware_interface)_J7_controller"/>
            <arg name="robot_name" value="$(arg robot_name)" />
            <arg name="model" value="$(arg model)" />
        </include>
    </group>

    <!-- <group ns="/iiwa">
       <node name="robot_state_publisher_reflex" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen"  >
        </node>
    </group> -->

    <!-- Load the URDF with the given hardware interface into the ROS Parameter Server -->
    <include file="$(find iiwa_description)/launch/$(arg model)_upload.launch">
        <arg name="hardware_interface" value="$(arg hardware_interface)"/>
        <arg name="robot_name" value="$(arg robot_name)" />
    </include>

    <!-- Run a python script to send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model iiwa -param robot_description"/>
    

    
    <!-- Run moveit planning execution -->
    <!-- <group >
        <include file="$(find iiwa_test_3_moveit)/launch/moveit_planning_execution_v2.launch">
            <arg name="rviz" value="$(arg rviz)" />
        </include>
    </group> -->

    <group ns="$(arg namespace_iiwa)">
        <include file="$(find iiwa_debug_moveit)/launch/moveit_planning_execution_debug.launch">
        <arg name="rviz" value="$(arg rviz)" />
        </include>
        
    </group>
    <!-- <group >
        <include file="$(find iiwa_debug_moveit)/launch/moveit_planning_execution_debug.launch">
            <arg name="rviz" value="$(arg rviz)" />
        </include>
    </group> -->
    <!-- <group >
       <node name="robot_state_publisher_BIM" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen"  >
        </node>
    </group> -->
    <!-- Publish the tf of the iiwa -->

    <!-- <group >
        <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model iiwa -param robot_description"/>
    </group> -->


    <!-- <group >
       <node name="robot_state_publisher_BIM" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen"  >
        </node>
    </group> -->

</launch>