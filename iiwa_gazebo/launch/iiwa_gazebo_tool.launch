<?xml version="1.0"?>
<launch>

    <!-- ===================================================================================== -->
    <!-- |    Lauch file to start Gazebo with an IIWA using various controllers.	         | -->

    <!-- |    It allows to customize the name of the robot, for each robot                   | -->
    <!-- |	  its topics will be under a nameespace with the same name as the robot's.       | -->

    <!-- |	  One can choose to have a joint trajectory controller or                        | -->
    <!-- |    controllers for the single joints, using the "trajectory" argument.            | -->
    <!-- ===================================================================================== -->

    <arg name="hardware_interface" default="PositionJointInterface" />
    <arg name="robot_name" default="iiwa" />
    <arg name="model" default="iiwa7"/>
    <arg name="namespace" default="iiwa"/>
    <arg name="trajectory" default="true"/>
    <arg name="bool_object" default="true"/>
    

    <remap from="reflex_takktile_2/joint_states" to="iiwa/joint_states"/>
    

    <!-- Loads the Gazebo world. -->
    <include file="$(find iiwa_gazebo)/launch/iiwa_world.launch">
        <arg name="hardware_interface" value="$(arg hardware_interface)" />
        <arg name="robot_name" value="$(arg robot_name)" />
        <arg name="model" value="$(arg model)" />
        <!-- <arg name="namespace" default="iiwa"/> -->
    </include>

    <!-- Spawn controllers - it uses a JointTrajectoryController -->
    <!-- ns="$(arg namespace)" -->
    <group ns="$(arg namespace)" if="$(arg trajectory)">

        <include file="$(find iiwa_control)/launch/iiwa_control.launch">
            <arg name="hardware_interface" value="$(arg hardware_interface)" />
            <arg name="controllers" value="$(arg hardware_interface)_trajectory_controller" />
            <arg name="robot_name" value="$(arg robot_name)" />
            <arg name="model" value="$(arg model)" />
        </include>

    </group>


    <!-- Spawn controllers - it uses an Effort Controller for each joint -->
    <!-- ns="$(arg namespace)" -->
    <group ns="$(arg namespace)" unless="$(arg trajectory)">

        <include file="$(find iiwa_control)/launch/iiwa_control.launch">
        <!-- <include file="$(find reflex_control)/launch/reflex_control.launch"> -->
        <!-- joint_state_controller -->
            <arg name="hardware_interface" value="$(arg hardware_interface)" />
            <arg name="controllers" value="
                
                $(arg hardware_interface)_J1_controller
                $(arg hardware_interface)_J2_controller
                $(arg hardware_interface)_J3_controller
                $(arg hardware_interface)_J4_controller
                $(arg hardware_interface)_J5_controller
                $(arg hardware_interface)_J6_controller
                $(arg hardware_interface)_J7_controller"/>
            <arg name="robot_name" value="$(arg robot_name)" />
            <arg name="model" value="$(arg model)" />
        </include>

    </group>

    <include file="$(find reflex_gazebo)/launch/reflex_tool.launch">
    </include>

    <!-- Run moveit planning execution -->
    <!-- <include file="$(find iiwa_test_3_moveit)/launch/moveit_planning_execution.launch">
    </include> -->

    <group ns="$(arg namespace)">
        <include file="$(find iiwa_test_3_moveit)/launch/moveit_planning_execution.launch">
    </include>

    </group>

    <!-- Add the object ns="$(arg namespace)"-->
    <group if="$(arg bool_object)">
        <arg name="object_name" default="object_to_catch"/>
        <arg name="model_path" default="$(find reflex_description)/urdf/$(arg object_name).xacro"/>
        <arg name="object_x" default="0.5"/>
        <arg name="object_y" default="0.0"/>
        <arg name="object_z" default="0.025"/>
        <arg name="object_roll" default="0.00"/>
        <arg name="object_pitch" default="0.00"/>
        <arg name="object_yaw" default="0"/>
        <!-- <group ns="$(arg namespace)"> -->
        <param name="object_description" command="$(find xacro)/xacro.py '$(arg model_path)' robot_name:=$(arg object_name)" />
        
        <node name="spawn_object" pkg="gazebo_ros" type="spawn_model" 
            args="
                -param object_description 
                -urdf 
                -model $(arg object_name)
                -x $(arg object_x) 
                -y $(arg object_y) 
                -z $(arg object_z)
                -R $(arg object_roll)
                -P $(arg object_pitch)
                -Y $(arg object_yaw)"             
                respawn="false" output="screen">
        </node>
    </group>
    <!-- </group> -->
    <!-- Object localization: -->
    <node name="object_pose_publisher" pkg="reflex_description" type:"gazebo_object_publisher.py">
    </node>
</launch>
